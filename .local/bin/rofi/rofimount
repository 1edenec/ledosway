#!/bin/bash

# Gives a rofi prompt to mount unmounted drives and Android phones. If
# they're in /etc/fstab, they'll be mounted automatically. Otherwise, you'll
# be prompted to give a mountpoint from already existsing directories. If you
# input a novel directory, it will prompt you to create that directory.
# cheers to Luke Smith

# assign icons for dunst
iconUSB="removable-media"
iconError="dialog-information"
iconAndroid="smartphone"

# just to make rofi looks unify
rofiSet="rofi -dmenu -i -width 600 -lines 6 -p"

function getMount(){
	# exit script if no USB device chosen
	[ -z "$chosen" ] && exit 1
# get all mounted devices and put it in rofi
# root folders will give an error, so 2>/dev/null them))
	mounted="$(lsblk -o "type,mountpoint" | awk '$1=="part"{print$2}')"
	mountPoint=$(find $mounted -maxdepth 3 -type d 2>/dev/null | $rofiSet "Type in mount point" -columns 1)
# if mountPoint exist, use it, else create it.
	[ "$mountPoint" = "" ] && exit 1

	if [ "$(echo $mounted | grep $mountPoint)" = "" ]
	then
		if [ ! -d "$mountPoint" ]
		then
			mkdirName=$(printf "No\\nYes" | $rofiSet "$mountPoint does not exist. Creat it?")
			[ "$mkdirName" = Yes ]\
				&& (mkdir -p "$mountPoint" || sudo -A mkdir -p "$mountPoint")\
				|| (dunstify "Aborted by user" && exit 1)
		fi
	else
		repeater=$(printf "Use Another\\nExit" | $rofiSet "$mountPoint already in use.")
		[ "$repeater" = "Use Another" ] && getMount || exit 1
	fi
}

function mountUSB(){
	getMount
# mount USB according it type
	partitionType="$(lsblk -no "fstype" "$chosen")"
	case "$partitionType" in
		"vfat") sudo -A mount -t vfat "$chosen" "$mountPoint" -o rw,umask=0000 && check=TRUE
			;;
		*) (sudo -A mount "$chosen" "$mountPoint") && check=TRUE
			;;
	esac

# dunstify tell you if something was wrong
[ "$check" ]\
	&& dunstify "USB mounting" "$chosen mounted to\n$mountPoint" -i $iconUSB\
	|| dunstify "USB mounting" "Something was wrong" -i  $iconError
}

function mountAndroid(){
	getMount
	simple-mtpfs --device "$chosen" "$mountPoint"\
		&& dunstify "Android Mounting" "Android device mounted to\n$mountPoint."\
		|| dunstify "Android Mounting" "Something was wrong" -i $iconError
	}

# this function decide android or USB device you are trying to connect
function decider(){
	case "${1}" in
		禍*) chosen=$(echo "${1}" | awk '{print $2}') && mountUSB ${1}
			;;
		*) chosen=$(echo "${1}" | awk '{gsub("","",$0)gsub(":","");print$1}')\
			&& mountAndroid ${1}
					;;
				*) exit 0
					;;
			esac
		}

# getting all not mounted usb-drives
usbDrives="$(lsblk -rpo "name,type,size,mountpoint" | awk '$2=="part"&&$4==""{print"禍  ",$1,$3}')"

# getting all not mounted android devices
andDrives="$(simple-mtpfs -l 2>/dev/null | awk '{print"",$0}')"

# show drives and android concatinated in rofi
if [[ $usbDrives != ""  &&  $andDrives != "" ]]
then
	mountDrives=$(echo -e "${usbDrives}\n${andDrives}" | $rofiSet "Mount which drive?"  )
	decider "${mountDrives}"
elif [[ $usbDrives != ""  &&  $andDrives == "" ]]
then
	mountDrives=$(echo -e "${usbDrives}" | $rofiSet "Mount which drive?"  )
	decider "${mountDrives}"
elif [[ $usbDrives == ""  &&  $andDrives != "" ]]
then
	mountDrives=$(echo -e "${andDrives}" | $rofiSet "Mount which drive?"  )
	decider "${mountDrives}"
else
	# show message if no new device detected
	dunstify "USB mounting" "No new USB or android device detected" -i $iconError
fi


