#!/bin/bash
# simple script to handle libvirtd and virt machines
# OPTIONS=" SpectrwmArch\n ManjaroKDE\n Win10\n Win10Test"

askVirtConsole(){
	OPTIONS=" VirtManager\n win10sea"
	option=$(echo -e $OPTIONS |\
		rofi -dmenu -width 40 -i -p "Virt machine to start:" -theme-str '#listview { scrollbar:false; }' |\
		tr -d '\r\n')
	case $option in
		" win10sea")domen="win10sea";;
		#" Artix-S6")domen="artixS6";;
		#" ArchRiver")domen="archlinuxriver";;
		" VirtManager")DRI_PRIME=1 virt-manager; exit;;
		*)exit;;
	esac

	DRI_PRIME=1 virt-manager --connect qemu:///system --show-domain-console "$domen"
}


askToStart(){
	OPTIONS="YES\nNO"
	#LAUNCHER='bemenu -p Start libvirt?'

	option=$(echo -e $OPTIONS |\
		rofi -dmenu -width 40 -l 2 -i -p "Start libvirt.service?"  -theme-str '#listview { scrollbar:false; }')
	case $option in
		YES)
			systemctl  start libvirtd.service
			askVirtConsole;;
		*)exit;;
	esac
}

if [ -z "$(systemctl status libvirtd.service | grep "active (running)")" ]
then
	askToStart
else
	askVirtConsole
fi
